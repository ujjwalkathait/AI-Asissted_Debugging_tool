Terminals unused in grammar

    DO
    BREAK
    STRING
    CHAR
    DOUBLE
    SWITCH
    CASE
    DEFAULT
    CONTINUE
    CONST_CHAR
    BITOP


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: var_declaration
    5     | func_declaration
    6     | func_definition

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN RPAREN SEMICOLON

    9 $@1: %empty

   10 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 compound_statement

   11 $@2: %empty

   12 func_definition: type_specifier ID LPAREN RPAREN $@2 compound_statement

   13 parameter_list: parameter_list COMMA type_specifier ID
   14               | parameter_list COMMA type_specifier
   15               | type_specifier ID
   16               | type_specifier

   17 $@3: %empty

   18 compound_statement: LCURL $@3 statements RCURL

   19 $@4: %empty

   20 compound_statement: LCURL $@4 RCURL

   21 var_declaration: type_specifier declaration_list SEMICOLON

   22 type_specifier: INT
   23               | FLOAT
   24               | VOID

   25 declaration_list: declaration_list COMMA ID
   26                 | declaration_list COMMA ID LTHIRD CONST_INT RTHIRD
   27                 | ID
   28                 | ID LTHIRD CONST_INT RTHIRD
   29                 | ID LTHIRD CONST_FLOAT RTHIRD

   30 statements: statement
   31           | statements statement

   32 statement: var_declaration
   33          | expression_statement
   34          | compound_statement
   35          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   36          | IF LPAREN expression RPAREN statement
   37          | IF LPAREN expression RPAREN statement ELSE statement
   38          | WHILE LPAREN expression RPAREN statement
   39          | PRINTLN LPAREN ID RPAREN SEMICOLON
   40          | RETURN expression SEMICOLON

   41 expression_statement: SEMICOLON
   42                     | expression SEMICOLON

   43 variable: ID
   44         | ID LTHIRD expression RTHIRD

   45 expression: logic_expression
   46           | variable ASSIGNOP logic_expression

   47 logic_expression: rel_expression
   48                 | rel_expression LOGICOP rel_expression

   49 rel_expression: simple_expression
   50               | simple_expression RELOP simple_expression

   51 simple_expression: term
   52                  | simple_expression ADDOP term

   53 term: unary_expression
   54     | term MULOP unary_expression

   55 unary_expression: ADDOP unary_expression
   56                 | NOT unary_expression
   57                 | factor

   58 factor: variable
   59       | ID LPAREN argument_list RPAREN
   60       | LPAREN expression RPAREN
   61       | CONST_INT
   62       | CONST_FLOAT
   63       | variable INCOP
   64       | variable DECOP

   65 argument_list: argument_list COMMA logic_expression
   66              | logic_expression


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IF (258) 36 37
    ELSE (259) 37
    FOR (260) 35
    WHILE (261) 38
    DO (262)
    BREAK (263)
    STRING (264)
    ID (265) 7 8 10 12 13 15 25 26 27 28 29 39 43 44 59
    PRINTLN (266) 39
    INT (267) 22
    FLOAT (268) 23
    CHAR (269)
    DOUBLE (270)
    VOID (271) 24
    RETURN (272) 40
    SWITCH (273)
    CASE (274)
    DEFAULT (275)
    CONTINUE (276)
    CONST_INT (277) 26 28 61
    CONST_FLOAT (278) 29 62
    CONST_CHAR (279)
    ADDOP (280) 52 55
    MULOP (281) 54
    INCOP (282) 63
    RELOP (283) 50
    ASSIGNOP (284) 46
    LOGICOP (285) 48
    BITOP (286)
    NOT (287) 56
    DECOP (288) 64
    LPAREN (289) 7 8 10 12 35 36 37 38 39 59 60
    RPAREN (290) 7 8 10 12 35 36 37 38 39 59 60
    LCURL (291) 18 20
    RCURL (292) 18 20
    LTHIRD (293) 26 28 29 44
    RTHIRD (294) 26 28 29 44
    COMMA (295) 13 14 25 26 65
    SEMICOLON (296) 7 8 21 39 40 41 42
    LOWER_THAN_ELSE (297)


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    start <s> (44)
        on left: 1
        on right: 0
    program (45)
        on left: 2 3
        on right: 1 2
    unit (46)
        on left: 4 5 6
        on right: 2 3
    func_declaration (47)
        on left: 7 8
        on right: 5
    func_definition (48)
        on left: 10 12
        on right: 6
    $@1 (49)
        on left: 9
        on right: 10
    $@2 (50)
        on left: 11
        on right: 12
    parameter_list (51)
        on left: 13 14 15 16
        on right: 7 10 13 14
    compound_statement (52)
        on left: 18 20
        on right: 10 12 34
    $@3 (53)
        on left: 17
        on right: 18
    $@4 (54)
        on left: 19
        on right: 20
    var_declaration (55)
        on left: 21
        on right: 4 32
    type_specifier (56)
        on left: 22 23 24
        on right: 7 8 10 12 13 14 15 16 21
    declaration_list (57)
        on left: 25 26 27 28 29
        on right: 21 25 26
    statements (58)
        on left: 30 31
        on right: 18 31
    statement (59)
        on left: 32 33 34 35 36 37 38 39 40
        on right: 30 31 35 36 37 38
    expression_statement (60)
        on left: 41 42
        on right: 33 35
    variable (61)
        on left: 43 44
        on right: 46 58 63 64
    expression (62)
        on left: 45 46
        on right: 35 36 37 38 40 42 44 60
    logic_expression (63)
        on left: 47 48
        on right: 45 46 65 66
    rel_expression (64)
        on left: 49 50
        on right: 47 48
    simple_expression (65)
        on left: 51 52
        on right: 49 50 52
    term (66)
        on left: 53 54
        on right: 51 52 54
    unary_expression (67)
        on left: 55 56 57
        on right: 53 54 55 56
    factor (68)
        on left: 58 59 60 61 62 63 64
        on right: 57
    argument_list (69)
        on left: 65 66
        on right: 59 65


State 0

    0 $accept: . start $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    start             go to state 4
    program           go to state 5
    unit              go to state 6
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 1

   22 type_specifier: INT .

    $default  reduce using rule 22 (type_specifier)


State 2

   23 type_specifier: FLOAT .

    $default  reduce using rule 23 (type_specifier)


State 3

   24 type_specifier: VOID .

    $default  reduce using rule 24 (type_specifier)


State 4

    0 $accept: start . $end

    $end  shift, and go to state 11


State 5

    1 start: program .
    2 program: program . unit

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (start)

    unit              go to state 12
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 6

    3 program: unit .

    $default  reduce using rule 3 (program)


State 7

    5 unit: func_declaration .

    $default  reduce using rule 5 (unit)


State 8

    6 unit: func_definition .

    $default  reduce using rule 6 (unit)


State 9

    4 unit: var_declaration .

    $default  reduce using rule 4 (unit)


State 10

    7 func_declaration: type_specifier . ID LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier . ID LPAREN RPAREN SEMICOLON
   10 func_definition: type_specifier . ID LPAREN parameter_list RPAREN $@1 compound_statement
   12                | type_specifier . ID LPAREN RPAREN $@2 compound_statement
   21 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 13

    declaration_list  go to state 14


State 11

    0 $accept: start $end .

    $default  accept


State 12

    2 program: program unit .

    $default  reduce using rule 2 (program)


State 13

    7 func_declaration: type_specifier ID . LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID . LPAREN RPAREN SEMICOLON
   10 func_definition: type_specifier ID . LPAREN parameter_list RPAREN $@1 compound_statement
   12                | type_specifier ID . LPAREN RPAREN $@2 compound_statement
   27 declaration_list: ID .
   28                 | ID . LTHIRD CONST_INT RTHIRD
   29                 | ID . LTHIRD CONST_FLOAT RTHIRD

    LPAREN  shift, and go to state 15
    LTHIRD  shift, and go to state 16

    $default  reduce using rule 27 (declaration_list)


State 14

   21 var_declaration: type_specifier declaration_list . SEMICOLON
   25 declaration_list: declaration_list . COMMA ID
   26                 | declaration_list . COMMA ID LTHIRD CONST_INT RTHIRD

    COMMA      shift, and go to state 17
    SEMICOLON  shift, and go to state 18


State 15

    7 func_declaration: type_specifier ID LPAREN . parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN . RPAREN SEMICOLON
   10 func_definition: type_specifier ID LPAREN . parameter_list RPAREN $@1 compound_statement
   12                | type_specifier ID LPAREN . RPAREN $@2 compound_statement

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    VOID    shift, and go to state 3
    RPAREN  shift, and go to state 19

    parameter_list  go to state 20
    type_specifier  go to state 21


State 16

   28 declaration_list: ID LTHIRD . CONST_INT RTHIRD
   29                 | ID LTHIRD . CONST_FLOAT RTHIRD

    CONST_INT    shift, and go to state 22
    CONST_FLOAT  shift, and go to state 23


State 17

   25 declaration_list: declaration_list COMMA . ID
   26                 | declaration_list COMMA . ID LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 24


State 18

   21 var_declaration: type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 21 (var_declaration)


State 19

    8 func_declaration: type_specifier ID LPAREN RPAREN . SEMICOLON
   12 func_definition: type_specifier ID LPAREN RPAREN . $@2 compound_statement

    SEMICOLON  shift, and go to state 25

    $default  reduce using rule 11 ($@2)

    $@2  go to state 26


State 20

    7 func_declaration: type_specifier ID LPAREN parameter_list . RPAREN SEMICOLON
   10 func_definition: type_specifier ID LPAREN parameter_list . RPAREN $@1 compound_statement
   13 parameter_list: parameter_list . COMMA type_specifier ID
   14               | parameter_list . COMMA type_specifier

    RPAREN  shift, and go to state 27
    COMMA   shift, and go to state 28


State 21

   15 parameter_list: type_specifier . ID
   16               | type_specifier .

    ID  shift, and go to state 29

    $default  reduce using rule 16 (parameter_list)


State 22

   28 declaration_list: ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 30


State 23

   29 declaration_list: ID LTHIRD CONST_FLOAT . RTHIRD

    RTHIRD  shift, and go to state 31


State 24

   25 declaration_list: declaration_list COMMA ID .
   26                 | declaration_list COMMA ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 32

    $default  reduce using rule 25 (declaration_list)


State 25

    8 func_declaration: type_specifier ID LPAREN RPAREN SEMICOLON .

    $default  reduce using rule 8 (func_declaration)


State 26

   12 func_definition: type_specifier ID LPAREN RPAREN $@2 . compound_statement

    LCURL  shift, and go to state 33

    compound_statement  go to state 34


State 27

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN . SEMICOLON
   10 func_definition: type_specifier ID LPAREN parameter_list RPAREN . $@1 compound_statement

    SEMICOLON  shift, and go to state 35

    $default  reduce using rule 9 ($@1)

    $@1  go to state 36


State 28

   13 parameter_list: parameter_list COMMA . type_specifier ID
   14               | parameter_list COMMA . type_specifier

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 37


State 29

   15 parameter_list: type_specifier ID .

    $default  reduce using rule 15 (parameter_list)


State 30

   28 declaration_list: ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 28 (declaration_list)


State 31

   29 declaration_list: ID LTHIRD CONST_FLOAT RTHIRD .

    $default  reduce using rule 29 (declaration_list)


State 32

   26 declaration_list: declaration_list COMMA ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 38


State 33

   18 compound_statement: LCURL . $@3 statements RCURL
   20                   | LCURL . $@4 RCURL

    RCURL     reduce using rule 19 ($@4)
    $default  reduce using rule 17 ($@3)

    $@3  go to state 39
    $@4  go to state 40


State 34

   12 func_definition: type_specifier ID LPAREN RPAREN $@2 compound_statement .

    $default  reduce using rule 12 (func_definition)


State 35

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON .

    $default  reduce using rule 7 (func_declaration)


State 36

   10 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 . compound_statement

    LCURL  shift, and go to state 33

    compound_statement  go to state 41


State 37

   13 parameter_list: parameter_list COMMA type_specifier . ID
   14               | parameter_list COMMA type_specifier .

    ID  shift, and go to state 42

    $default  reduce using rule 14 (parameter_list)


State 38

   26 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 43


State 39

   18 compound_statement: LCURL $@3 . statements RCURL

    IF           shift, and go to state 44
    FOR          shift, and go to state 45
    WHILE        shift, and go to state 46
    ID           shift, and go to state 47
    PRINTLN      shift, and go to state 48
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 49
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ADDOP        shift, and go to state 52
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54
    LCURL        shift, and go to state 33
    SEMICOLON    shift, and go to state 55

    compound_statement    go to state 56
    var_declaration       go to state 57
    type_specifier        go to state 58
    statements            go to state 59
    statement             go to state 60
    expression_statement  go to state 61
    variable              go to state 62
    expression            go to state 63
    logic_expression      go to state 64
    rel_expression        go to state 65
    simple_expression     go to state 66
    term                  go to state 67
    unary_expression      go to state 68
    factor                go to state 69


State 40

   20 compound_statement: LCURL $@4 . RCURL

    RCURL  shift, and go to state 70


State 41

   10 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 compound_statement .

    $default  reduce using rule 10 (func_definition)


State 42

   13 parameter_list: parameter_list COMMA type_specifier ID .

    $default  reduce using rule 13 (parameter_list)


State 43

   26 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 26 (declaration_list)


State 44

   36 statement: IF . LPAREN expression RPAREN statement
   37          | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 71


State 45

   35 statement: FOR . LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 72


State 46

   38 statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 73


State 47

   43 variable: ID .
   44         | ID . LTHIRD expression RTHIRD
   59 factor: ID . LPAREN argument_list RPAREN

    LPAREN  shift, and go to state 74
    LTHIRD  shift, and go to state 75

    $default  reduce using rule 43 (variable)


State 48

   39 statement: PRINTLN . LPAREN ID RPAREN SEMICOLON

    LPAREN  shift, and go to state 76


State 49

   40 statement: RETURN . expression SEMICOLON

    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ADDOP        shift, and go to state 52
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable           go to state 62
    expression         go to state 77
    logic_expression   go to state 64
    rel_expression     go to state 65
    simple_expression  go to state 66
    term               go to state 67
    unary_expression   go to state 68
    factor             go to state 69


State 50

   61 factor: CONST_INT .

    $default  reduce using rule 61 (factor)


State 51

   62 factor: CONST_FLOAT .

    $default  reduce using rule 62 (factor)


State 52

   55 unary_expression: ADDOP . unary_expression

    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ADDOP        shift, and go to state 52
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable          go to state 78
    unary_expression  go to state 79
    factor            go to state 69


State 53

   56 unary_expression: NOT . unary_expression

    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ADDOP        shift, and go to state 52
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable          go to state 78
    unary_expression  go to state 80
    factor            go to state 69


State 54

   60 factor: LPAREN . expression RPAREN

    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ADDOP        shift, and go to state 52
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable           go to state 62
    expression         go to state 81
    logic_expression   go to state 64
    rel_expression     go to state 65
    simple_expression  go to state 66
    term               go to state 67
    unary_expression   go to state 68
    factor             go to state 69


State 55

   41 expression_statement: SEMICOLON .

    $default  reduce using rule 41 (expression_statement)


State 56

   34 statement: compound_statement .

    $default  reduce using rule 34 (statement)


State 57

   32 statement: var_declaration .

    $default  reduce using rule 32 (statement)


State 58

   21 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 82

    declaration_list  go to state 14


State 59

   18 compound_statement: LCURL $@3 statements . RCURL
   31 statements: statements . statement

    IF           shift, and go to state 44
    FOR          shift, and go to state 45
    WHILE        shift, and go to state 46
    ID           shift, and go to state 47
    PRINTLN      shift, and go to state 48
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 49
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ADDOP        shift, and go to state 52
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54
    LCURL        shift, and go to state 33
    RCURL        shift, and go to state 83
    SEMICOLON    shift, and go to state 55

    compound_statement    go to state 56
    var_declaration       go to state 57
    type_specifier        go to state 58
    statement             go to state 84
    expression_statement  go to state 61
    variable              go to state 62
    expression            go to state 63
    logic_expression      go to state 64
    rel_expression        go to state 65
    simple_expression     go to state 66
    term                  go to state 67
    unary_expression      go to state 68
    factor                go to state 69


State 60

   30 statements: statement .

    $default  reduce using rule 30 (statements)


State 61

   33 statement: expression_statement .

    $default  reduce using rule 33 (statement)


State 62

   46 expression: variable . ASSIGNOP logic_expression
   58 factor: variable .
   63       | variable . INCOP
   64       | variable . DECOP

    INCOP     shift, and go to state 85
    ASSIGNOP  shift, and go to state 86
    DECOP     shift, and go to state 87

    $default  reduce using rule 58 (factor)


State 63

   42 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 88


State 64

   45 expression: logic_expression .

    $default  reduce using rule 45 (expression)


State 65

   47 logic_expression: rel_expression .
   48                 | rel_expression . LOGICOP rel_expression

    LOGICOP  shift, and go to state 89

    $default  reduce using rule 47 (logic_expression)


State 66

   49 rel_expression: simple_expression .
   50               | simple_expression . RELOP simple_expression
   52 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 90
    RELOP  shift, and go to state 91

    $default  reduce using rule 49 (rel_expression)


State 67

   51 simple_expression: term .
   54 term: term . MULOP unary_expression

    MULOP  shift, and go to state 92

    $default  reduce using rule 51 (simple_expression)


State 68

   53 term: unary_expression .

    $default  reduce using rule 53 (term)


State 69

   57 unary_expression: factor .

    $default  reduce using rule 57 (unary_expression)


State 70

   20 compound_statement: LCURL $@4 RCURL .

    $default  reduce using rule 20 (compound_statement)


State 71

   36 statement: IF LPAREN . expression RPAREN statement
   37          | IF LPAREN . expression RPAREN statement ELSE statement

    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ADDOP        shift, and go to state 52
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable           go to state 62
    expression         go to state 93
    logic_expression   go to state 64
    rel_expression     go to state 65
    simple_expression  go to state 66
    term               go to state 67
    unary_expression   go to state 68
    factor             go to state 69


State 72

   35 statement: FOR LPAREN . expression_statement expression_statement expression RPAREN statement

    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ADDOP        shift, and go to state 52
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54
    SEMICOLON    shift, and go to state 55

    expression_statement  go to state 94
    variable              go to state 62
    expression            go to state 63
    logic_expression      go to state 64
    rel_expression        go to state 65
    simple_expression     go to state 66
    term                  go to state 67
    unary_expression      go to state 68
    factor                go to state 69


State 73

   38 statement: WHILE LPAREN . expression RPAREN statement

    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ADDOP        shift, and go to state 52
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable           go to state 62
    expression         go to state 95
    logic_expression   go to state 64
    rel_expression     go to state 65
    simple_expression  go to state 66
    term               go to state 67
    unary_expression   go to state 68
    factor             go to state 69


State 74

   59 factor: ID LPAREN . argument_list RPAREN

    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ADDOP        shift, and go to state 52
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable           go to state 78
    logic_expression   go to state 96
    rel_expression     go to state 65
    simple_expression  go to state 66
    term               go to state 67
    unary_expression   go to state 68
    factor             go to state 69
    argument_list      go to state 97


State 75

   44 variable: ID LTHIRD . expression RTHIRD

    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ADDOP        shift, and go to state 52
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable           go to state 62
    expression         go to state 98
    logic_expression   go to state 64
    rel_expression     go to state 65
    simple_expression  go to state 66
    term               go to state 67
    unary_expression   go to state 68
    factor             go to state 69


State 76

   39 statement: PRINTLN LPAREN . ID RPAREN SEMICOLON

    ID  shift, and go to state 99


State 77

   40 statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 100


State 78

   58 factor: variable .
   63       | variable . INCOP
   64       | variable . DECOP

    INCOP  shift, and go to state 85
    DECOP  shift, and go to state 87

    $default  reduce using rule 58 (factor)


State 79

   55 unary_expression: ADDOP unary_expression .

    $default  reduce using rule 55 (unary_expression)


State 80

   56 unary_expression: NOT unary_expression .

    $default  reduce using rule 56 (unary_expression)


State 81

   60 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 101


State 82

   27 declaration_list: ID .
   28                 | ID . LTHIRD CONST_INT RTHIRD
   29                 | ID . LTHIRD CONST_FLOAT RTHIRD

    LTHIRD  shift, and go to state 16

    $default  reduce using rule 27 (declaration_list)


State 83

   18 compound_statement: LCURL $@3 statements RCURL .

    $default  reduce using rule 18 (compound_statement)


State 84

   31 statements: statements statement .

    $default  reduce using rule 31 (statements)


State 85

   63 factor: variable INCOP .

    $default  reduce using rule 63 (factor)


State 86

   46 expression: variable ASSIGNOP . logic_expression

    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ADDOP        shift, and go to state 52
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable           go to state 78
    logic_expression   go to state 102
    rel_expression     go to state 65
    simple_expression  go to state 66
    term               go to state 67
    unary_expression   go to state 68
    factor             go to state 69


State 87

   64 factor: variable DECOP .

    $default  reduce using rule 64 (factor)


State 88

   42 expression_statement: expression SEMICOLON .

    $default  reduce using rule 42 (expression_statement)


State 89

   48 logic_expression: rel_expression LOGICOP . rel_expression

    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ADDOP        shift, and go to state 52
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable           go to state 78
    rel_expression     go to state 103
    simple_expression  go to state 66
    term               go to state 67
    unary_expression   go to state 68
    factor             go to state 69


State 90

   52 simple_expression: simple_expression ADDOP . term

    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ADDOP        shift, and go to state 52
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable          go to state 78
    term              go to state 104
    unary_expression  go to state 68
    factor            go to state 69


State 91

   50 rel_expression: simple_expression RELOP . simple_expression

    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ADDOP        shift, and go to state 52
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable           go to state 78
    simple_expression  go to state 105
    term               go to state 67
    unary_expression   go to state 68
    factor             go to state 69


State 92

   54 term: term MULOP . unary_expression

    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ADDOP        shift, and go to state 52
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable          go to state 78
    unary_expression  go to state 106
    factor            go to state 69


State 93

   36 statement: IF LPAREN expression . RPAREN statement
   37          | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 107


State 94

   35 statement: FOR LPAREN expression_statement . expression_statement expression RPAREN statement

    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ADDOP        shift, and go to state 52
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54
    SEMICOLON    shift, and go to state 55

    expression_statement  go to state 108
    variable              go to state 62
    expression            go to state 63
    logic_expression      go to state 64
    rel_expression        go to state 65
    simple_expression     go to state 66
    term                  go to state 67
    unary_expression      go to state 68
    factor                go to state 69


State 95

   38 statement: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 109


State 96

   66 argument_list: logic_expression .

    $default  reduce using rule 66 (argument_list)


State 97

   59 factor: ID LPAREN argument_list . RPAREN
   65 argument_list: argument_list . COMMA logic_expression

    RPAREN  shift, and go to state 110
    COMMA   shift, and go to state 111


State 98

   44 variable: ID LTHIRD expression . RTHIRD

    RTHIRD  shift, and go to state 112


State 99

   39 statement: PRINTLN LPAREN ID . RPAREN SEMICOLON

    RPAREN  shift, and go to state 113


State 100

   40 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 40 (statement)


State 101

   60 factor: LPAREN expression RPAREN .

    $default  reduce using rule 60 (factor)


State 102

   46 expression: variable ASSIGNOP logic_expression .

    $default  reduce using rule 46 (expression)


State 103

   48 logic_expression: rel_expression LOGICOP rel_expression .

    $default  reduce using rule 48 (logic_expression)


State 104

   52 simple_expression: simple_expression ADDOP term .
   54 term: term . MULOP unary_expression

    MULOP  shift, and go to state 92

    $default  reduce using rule 52 (simple_expression)


State 105

   50 rel_expression: simple_expression RELOP simple_expression .
   52 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 90

    $default  reduce using rule 50 (rel_expression)


State 106

   54 term: term MULOP unary_expression .

    $default  reduce using rule 54 (term)


State 107

   36 statement: IF LPAREN expression RPAREN . statement
   37          | IF LPAREN expression RPAREN . statement ELSE statement

    IF           shift, and go to state 44
    FOR          shift, and go to state 45
    WHILE        shift, and go to state 46
    ID           shift, and go to state 47
    PRINTLN      shift, and go to state 48
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 49
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ADDOP        shift, and go to state 52
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54
    LCURL        shift, and go to state 33
    SEMICOLON    shift, and go to state 55

    compound_statement    go to state 56
    var_declaration       go to state 57
    type_specifier        go to state 58
    statement             go to state 114
    expression_statement  go to state 61
    variable              go to state 62
    expression            go to state 63
    logic_expression      go to state 64
    rel_expression        go to state 65
    simple_expression     go to state 66
    term                  go to state 67
    unary_expression      go to state 68
    factor                go to state 69


State 108

   35 statement: FOR LPAREN expression_statement expression_statement . expression RPAREN statement

    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ADDOP        shift, and go to state 52
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable           go to state 62
    expression         go to state 115
    logic_expression   go to state 64
    rel_expression     go to state 65
    simple_expression  go to state 66
    term               go to state 67
    unary_expression   go to state 68
    factor             go to state 69


State 109

   38 statement: WHILE LPAREN expression RPAREN . statement

    IF           shift, and go to state 44
    FOR          shift, and go to state 45
    WHILE        shift, and go to state 46
    ID           shift, and go to state 47
    PRINTLN      shift, and go to state 48
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 49
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ADDOP        shift, and go to state 52
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54
    LCURL        shift, and go to state 33
    SEMICOLON    shift, and go to state 55

    compound_statement    go to state 56
    var_declaration       go to state 57
    type_specifier        go to state 58
    statement             go to state 116
    expression_statement  go to state 61
    variable              go to state 62
    expression            go to state 63
    logic_expression      go to state 64
    rel_expression        go to state 65
    simple_expression     go to state 66
    term                  go to state 67
    unary_expression      go to state 68
    factor                go to state 69


State 110

   59 factor: ID LPAREN argument_list RPAREN .

    $default  reduce using rule 59 (factor)


State 111

   65 argument_list: argument_list COMMA . logic_expression

    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ADDOP        shift, and go to state 52
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable           go to state 78
    logic_expression   go to state 117
    rel_expression     go to state 65
    simple_expression  go to state 66
    term               go to state 67
    unary_expression   go to state 68
    factor             go to state 69


State 112

   44 variable: ID LTHIRD expression RTHIRD .

    $default  reduce using rule 44 (variable)


State 113

   39 statement: PRINTLN LPAREN ID RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 118


State 114

   36 statement: IF LPAREN expression RPAREN statement .
   37          | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 119

    $default  reduce using rule 36 (statement)


State 115

   35 statement: FOR LPAREN expression_statement expression_statement expression . RPAREN statement

    RPAREN  shift, and go to state 120


State 116

   38 statement: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 38 (statement)


State 117

   65 argument_list: argument_list COMMA logic_expression .

    $default  reduce using rule 65 (argument_list)


State 118

   39 statement: PRINTLN LPAREN ID RPAREN SEMICOLON .

    $default  reduce using rule 39 (statement)


State 119

   37 statement: IF LPAREN expression RPAREN statement ELSE . statement

    IF           shift, and go to state 44
    FOR          shift, and go to state 45
    WHILE        shift, and go to state 46
    ID           shift, and go to state 47
    PRINTLN      shift, and go to state 48
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 49
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ADDOP        shift, and go to state 52
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54
    LCURL        shift, and go to state 33
    SEMICOLON    shift, and go to state 55

    compound_statement    go to state 56
    var_declaration       go to state 57
    type_specifier        go to state 58
    statement             go to state 121
    expression_statement  go to state 61
    variable              go to state 62
    expression            go to state 63
    logic_expression      go to state 64
    rel_expression        go to state 65
    simple_expression     go to state 66
    term                  go to state 67
    unary_expression      go to state 68
    factor                go to state 69


State 120

   35 statement: FOR LPAREN expression_statement expression_statement expression RPAREN . statement

    IF           shift, and go to state 44
    FOR          shift, and go to state 45
    WHILE        shift, and go to state 46
    ID           shift, and go to state 47
    PRINTLN      shift, and go to state 48
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 49
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ADDOP        shift, and go to state 52
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54
    LCURL        shift, and go to state 33
    SEMICOLON    shift, and go to state 55

    compound_statement    go to state 56
    var_declaration       go to state 57
    type_specifier        go to state 58
    statement             go to state 122
    expression_statement  go to state 61
    variable              go to state 62
    expression            go to state 63
    logic_expression      go to state 64
    rel_expression        go to state 65
    simple_expression     go to state 66
    term                  go to state 67
    unary_expression      go to state 68
    factor                go to state 69


State 121

   37 statement: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 37 (statement)


State 122

   35 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement .

    $default  reduce using rule 35 (statement)
